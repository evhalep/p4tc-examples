#!/bin/bash -x

TC="tc"
set -e

# Create pipeline p4tc_test_002 (pipeline id provided by the kernel)
$TC p4template create pipeline/p4tc_test_002 numtables 1

#########################
# Defining Header Fields#
#########################
# Create header field object from ipv4 destination address
# Note the "parser1" was declared earlier in the parser script
# these header are defined in the parser script. Their IDs map to
# "md-off" field in the parser definition using formula of:
# headerid = md-off/2 + 1
$TC p4template create hdrfield/p4tc_test_002/parser1/ipv4/ipproto hdrfieldid 2  type bit8
$TC p4template create hdrfield/p4tc_test_002/parser1/ipv4/srcAddr hdrfieldid 3  type ipv4
$TC p4template create hdrfield/p4tc_test_002/parser1/ipv4/dstAddr hdrfieldid 4  type ipv4
$TC p4template create hdrfield/p4tc_test_002/parser1/ipv4/isValid hdrfieldid 7 type bit1

####################
# Defining Metadata#
####################
echo "creating metadata"
sleep 1
$TC p4template create metadata/p4tc_test_002/global/drop mid 4 type bit1
#Metadata for egress port
$TC p4template create metadata/p4tc_test_002/output_port mid 8 type dev

echo "dumping metadata"
$TC p4template get metadata/p4tc_test_002

####################################
# Create Actions + defined Externs #
####################################
echo "Creating Actions and externs.."
sleep 1
# next_hop() just sets metadata which will be used on POA hook
# We have a type "dev" which is not really P4 type
# Other possible types here are port ifindex and port id
# but if we have any of those we will need a translation table.
# Note, here we create the actions specified in the P4 program
$TC p4template create action/p4tc_test_002/MainControlImpl/next_hop actid 1 \
    param port type dev id 1 \
    cmd set metadata.p4tc_test_002.output_port  param.port

# activate
$TC p4template update action/p4tc_test_002/MainControlImpl/next_hop state active

$TC p4template create action/p4tc_test_002/MainControlImpl/default_route_drop actid 2 \
    cmd print prefix tablemiss: hdrfield.p4tc_test_002.parser1.ipv4.dstAddr \
    cmd set metadata.p4tc_test_002.global/drop constant.bit1.1 

# activate
$TC p4template update action/p4tc_test_002/MainControlImpl/default_route_drop state active

################## Tables ###############################

#########################################################
# Declare table "ipv4_tbl" and associated infrastructure
#########################################################

echo "Creating table.."
$TC p4template create table/p4tc_test_002/MainControlImpl/ipv4_tbl \
	tblid 1 keysz 72 nummasks 8 tentries 2048 \
	table_acts act name p4tc_test_002/MainControlImpl/default_route_drop flags defaultonly \
	act name p4tc_test_002/MainControlImpl/next_hop flags tableonly

# Table "ipv4_tbl" preaction T_ipv4_tbl_PRA
##################################################
# Create code that will process the key for table ipv4_tbl
# chosen naming convenction for this action is T_<Table name>_PRA
# note: right now, the only thing we are doing in table preaction is
#       key selection
echo "Creating key construction T_ipv4_tbl_PRA.."
$TC p4template create action/p4tc_test_002/ipv4_tbl/T_ipv4_tbl_PRA \
	cmd print prefix T_ipv4_tbl_PRA hdrfield.p4tc_test_002.parser1.ipv4.dstAddr \
	cmd concat key.p4tc_test_002.MainControlImpl/ipv4_tbl \
	    hdrfield.p4tc_test_002.parser1.ipv4.dstAddr \
	    hdrfield.p4tc_test_002.parser1.ipv4.srcAddr \
	    hdrfield.p4tc_test_002.parser1.ipv4.ipproto
#Activate 
$TC p4template update action/p4tc_test_002/ipv4_tbl/T_ipv4_tbl_PRA state active

#bind the key action to the table "ipv4_tbl" for creation
$TC p4template update table/p4tc_test_002/MainControlImpl/ipv4_tbl \
	key action p4tc_test_002/ipv4_tbl/T_ipv4_tbl_PRA

# Table "ipv4_tbl" postaction T_ipv4_tbl_POA
##################################################
#naming convention is T_<Table Name>_POA
#
# note for this case it is not needed but we will create it here
# because current code expects it.. We are using it here for debug
# XXX: code needs fixing..

$TC p4template create action/p4tc_test_002/ipv4_tbl/T_ipv4_tbl_POA \
	cmd print prefix T_ipv4_tbl_POA_res results.hit \
	cmd print prefix T_ipv4_tbl_POA hdrfield.p4tc_test_002.parser1.ipv4.dstAddr \
	cmd print prefix T_ipv4_tbl_POA hdrfield.p4tc_test_002.parser1.ipv4.srcAddr \
	cmd print prefix T_ipv4_tbl_POA hdrfield.p4tc_test_002.parser1.ipv4.ipproto \
	cmd print prefix T_ipv4_tbl_POA key.p4tc_test_002.MainControlImpl/ipv4_tbl

$TC p4template update action/p4tc_test_002/ipv4_tbl/T_ipv4_tbl_POA state active

$TC p4template update table/p4tc_test_002/MainControlImpl/ipv4_tbl postactions \
    action p4tc_test_002/ipv4_tbl/T_ipv4_tbl_POA

# Table "ipv4_tbl" miss default action T_ipv4_tbl_miss
############################################################
# Create default miss action which happens to be a const
# Naming: T_<Table name>_miss if we have to create from scratch
# in this case it is PNA's drop which sets the drop metadata
$TC p4template update table/p4tc_test_002/MainControlImpl/ipv4_tbl \
    default_miss_action permissions 0x109 action p4tc_test_002/MainControlImpl/default_route_drop

#
##########################################
# Define pipeline pre/post infrastructure#
##########################################

# Define pipeline preaction PPREA
##################################

# if (RxPkt(meta) && hdrs.ipv4.isValid() && hdr.tcp.isValid()) {
#    ipv4_tbl.apply();
# }
# which translates to:
#
# if  (hdrs.ipv4.isValid())
#        ipv4_tbl.apply();
# }
# current semantics of direction are:
# 0 means INGRESS (NET_TO_HOST) and 1 means EGRESS (HOST_TO_NET)

$TC p4template create action/p4tc_test_002/PPREA \
 cmd print prefix PPREA hdrfield.p4tc_test_002.parser1.ipv4.isValid \
 cmd beq hdrfield.p4tc_test_002.parser1.ipv4.isValid constant.bit1.1 \
                               control pipe / jump endif \
 cmd tableapply table.p4tc_test_002.MainControlImpl/ipv4_tbl \
 cmd label endif

#activate action
$TC p4template update action/p4tc_test_002/PPREA state active

#bind
$TC p4template update pipeline/p4tc_test_002 preactions action p4tc_test_002/PPREA

# Define pipeline postaction PPOA
##################################
#Naming convention for pipeline postaction is PPOA

############### Pipeline Postactions ###########################
$TC p4template create action/p4tc_test_002/PPOA  \
        cmd print prefix PPOAdrop metadata.p4tc_test_002.global/drop \
        cmd print prefix PPOAport metadata.p4tc_test_002.output_port \
	cmd beq metadata.p4tc_test_002.global/drop constant.bit1.1 control drop / pipe \
	cmd send_port_egress metadata.p4tc_test_002.output_port

$TC p4template update action/p4tc_test_002/PPOA state active

$TC p4template update pipeline/p4tc_test_002 postactions action p4tc_test_002/PPOA

# Seal pipeline
$TC p4template update pipeline/p4tc_test_002 state ready
