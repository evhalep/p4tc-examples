#!/bin/bash -x

TC="tc"
set -e

# Create pipeline
$TC p4template create pipeline/simple_l3_pna numtables 1

#########################
# Defining Header Fields#
#########################
# Create header field object from ipv4 destination address
# Note the "parser1" was declared earlier in the parser script
$TC p4template create hdrfield/simple_l3_pna/parser1/ipv4/dstAddr hdrfieldid 4  type ipv4
$TC p4template create hdrfield/simple_l3_pna/parser1/ipv4/isValid hdrfieldid 7 type bit1
$TC p4template create hdrfield/simple_l3_pna/parser1/tcp/isValid hdrfieldid 8 type bit1

####################
# Defining Metadata#
####################
echo "creating metadata"
sleep 1
$TC p4template create metadata/simple_l3_pna/global/drop mid 4 type bit1
#Metadata for egress port
$TC p4template create metadata/simple_l3_pna/output_port mid 8 type dev

echo "dumping metadata"
$TC p4template get metadata/simple_l3_pna

####################################
# Create Actions + defined Externs #
####################################
echo "Creating Actions and externs.."
sleep 1
# send() just sets metadata which will be used on POA hook
# We have a type "dev" which is not really P4 type
# Other possible types here are port ifindex and port id
# but if we have any of those we will need a translation table.
# Note, here we create the actions specified in the P4 program
$TC p4template create action/simple_l3_pna/MainControlImpl/send actid 1 \
    param port type dev id 1 \
    cmd set metadata.simple_l3_pna.output_port  param.port

# activate
$TC p4template update action/simple_l3_pna/MainControlImpl/send state active

$TC p4template create action/simple_l3_pna/MainControlImpl/drop actid 2 \
    cmd print prefix tablemiss: hdrfield.simple_l3_pna.parser1.ipv4.dstAddr \
    cmd set metadata.simple_l3_pna.global/drop constant.bit1.1 

# activate
$TC p4template update action/simple_l3_pna/MainControlImpl/drop state active

################## Tables ###############################

#########################################################
# Declare table "l3_match_rx" and associated infrastructure
#########################################################

$TC p4template create table/simple_l3_pna/MainControlImpl/l3_match_rx \
	tblid 1  keysz 32 nummasks 8 tentries 2048 \
	table_acts act name simple_l3_pna/MainControlImpl/send flags tableonly \
	act name simple_l3_pna/MainControlImpl/drop flags defaultonly

# Table "l3_match_rx" preaction T_l3_match_rx_PRA
##################################################
# Create code that will process the key for table l3_match_rx
# chosen naming convenction for this action is T_<Table name>_PRA
# note: right now, the only thing we are doing in table preaction is
#       key selection
$TC p4template create action/simple_l3_pna/l3_match_rx/T_l3_match_rx_PRA \
	cmd print prefix T_l3_match_rx_PRA hdrfield.simple_l3_pna.parser1.ipv4.dstAddr \
	cmd set key.simple_l3_pna.MainControlImpl/l3_match_rx \
	    hdrfield.simple_l3_pna.parser1.ipv4.dstAddr
#Activate 
$TC p4template update action/simple_l3_pna/l3_match_rx/T_l3_match_rx_PRA state active

#bind the key action to the table "l3_match_rx" for creation
$TC p4template update table/simple_l3_pna/MainControlImpl/l3_match_rx \
	key action simple_l3_pna/l3_match_rx/T_l3_match_rx_PRA

# Table "l3_match_rx" postaction T_l3_match_rx_POA
##################################################
#naming convention is T_<Table Name>_POA
#
# note for this case it is not needed but we will create it here
# because current code expects it.. We are using it here for debug
# XXX: code needs fixing..

$TC p4template create action/simple_l3_pna/l3_match_rx/T_l3_match_rx_POA \
	cmd print prefix T_l3_match_rx_POA_res results.hit \
	cmd print prefix T_l3_match_rx_POA hdrfield.simple_l3_pna.parser1.ipv4.dstAddr

$TC p4template update action/simple_l3_pna/l3_match_rx/T_l3_match_rx_POA state active

$TC p4template update table/simple_l3_pna/MainControlImpl/l3_match_rx postactions \
    action simple_l3_pna/l3_match_rx/T_l3_match_rx_POA

# Table "l3_match_rx" miss default action T_l3_match_rx_miss
############################################################
# Create default miss action which happens to be a const
# Naming: T_<Table name>_miss if we have to create from scratch
# in this case it is PNA's drop which sets the drop metadata
$TC p4template update table/simple_l3_pna/MainControlImpl/l3_match_rx \
    default_miss_action permissions 0x109 action simple_l3_pna/MainControlImpl/drop

#
##########################################
# Define pipeline pre/post infrastructure#
##########################################

# Define pipeline preaction PPREA
##################################

# if (RxPkt(meta) && hdrs.ipv4.isValid() && hdr.tcp.isValid()) {
#    l3_match_rx.apply();
# }
# which translates to:
#
# if (meta.common.direction == NET_TO_HOST && 
#     hdrs.ipv4.isValid() &&
#     hdr.tcp.isValid()) {
#        l3_match_rx.apply();
# }
# current semantics of direction are:
# 1 means INGRESS (NET_TO_HOST) and 0 means EGRESS (HOST_TO_NET)

$TC p4template create action/simple_l3_pna/PPREA \
 cmd print prefix PPREA metadata.kernel.direction \
 cmd print prefix PPREA hdrfield.simple_l3_pna.parser1.ipv4.isValid \
 cmd beq metadata.kernel.direction constant.bit1.1 \
                               control pipe / jump endif \
 cmd beq hdrfield.simple_l3_pna.parser1.ipv4.isValid constant.bit1.1 \
                               control pipe / jump endif \
 cmd tableapply table.simple_l3_pna.MainControlImpl/l3_match_rx \
 cmd label endif

#activate action
$TC p4template update action/simple_l3_pna/PPREA state active

#bind
$TC p4template update pipeline/simple_l3_pna preactions action simple_l3_pna/PPREA

# Define pipeline postaction PPOA
##################################
#Naming convention for pipeline postaction is PPOA

############### Pipeline Postactions ###########################
$TC p4template create action/simple_l3_pna/PPOA  \
        cmd print prefix PPOAdrop metadata.simple_l3_pna.global/drop \
        cmd print prefix PPOAport metadata.simple_l3_pna.output_port \
	cmd beq metadata.simple_l3_pna.global/drop constant.bit1.1 control drop / pipe \
	cmd send_port_egress metadata.simple_l3_pna.output_port

$TC p4template update action/simple_l3_pna/PPOA state active

$TC p4template update pipeline/simple_l3_pna postactions action simple_l3_pna/PPOA

# Seal pipeline
$TC p4template update pipeline/simple_l3_pna state ready
